(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

// let car = {
// 	'model':'TeslaRoadster',
// 	'manufacturer':'America',
// 	'year of release':2020,
// 	'km per hour':160
// }
// Object.getOwnPropertyNames(car).forEach(
//   function (val, idx, array) {
//     alert(val + ' = ' + car[val]);
//   }
// );
var direction = 'вправо';
var offset = 0;
$("#per").offset({
  left: offset,
  top: offset
});

var moveHeading = function moveHeading() {
  if (direction === 'вправо') {
    $("#per").offset({
      left: offset
    });
    offset++;

    if (offset > 200) {
      offset = 0;
      direction = 'вниз';
    }
  } else if (direction === 'вниз') {
    $("#per").offset({
      top: offset
    });
    offset++;

    if (offset > 200) {
      offset = 200;
      direction = 'влево';
    }
  } else if (direction === 'влево') {
    $("#per").offset({
      left: offset
    });
    offset--;

    if (offset < 0) {
      offset = 200;
      direction = 'вверх';
    }
  } else if (direction === 'вверх') {
    $("#per").offset({
      top: offset
    });
    offset--;

    if (offset < 0) {
      offset = 0;
      direction = 'вправо';
    }
  }
};

var intervalId = setInterval(moveHeading, 30);
$("#per").click(function () {
  clearInterval(intervalId);
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
