(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

//nav
var hamburger = document.querySelector('.hamburger');
var navLinks = document.querySelector('.nav-links');
var links = document.querySelectorAll('.nav-links li');
hamburger.addEventListener('click', function () {
  navLinks.classList.toggle('open');
  links.forEach(function (link) {
    link.classList.toggle('fade');
  });
}); //scrool

$(window).on("scroll", function () {
  if ($(window).scrollTop()) {
    $('nav').addClass('grey');
  } else {
    $('nav').removeClass('grey');
  }
}); //vegas-bg

$("body").vegas({
  delay: 4000,
  transition: 'zoomOut',
  slides: [{
    src: "./img/bg.jpg"
  }, {
    src: "./img/bg1.jpg"
  }, {
    src: "./img/bg2.jpg"
  }, {
    src: "./img/bg3.jpg"
  }],
  overlay: true,
  cover: true
}); //preloader

document.body.onload = function () {
  setTimeout(function () {
    var preloader = document.getElementById('page-preloader');

    if (!preloader.classList.contains('done')) {
      preloader.classList.add('done');
    }
  }, 2000);
}; //product


document.querySelector('#sort-asc').onclick = function () {
  sortList('data-price');
};

document.querySelector('#sort-desc').onclick = function () {
  sortListDesc('data-price');
};

document.querySelector('#sort-rating').onclick = function () {
  sortListDesc('data-rating');
};

function sortList(sortType) {
  var items = document.querySelector('.product__wrap');

  for (var i = 0; i < items.children.length - 1; i++) {
    for (var j = i; j < items.children.length; j++) {
      if (+items.children[i].getAttribute(sortType) > +items.children[j].getAttribute(sortType)) {
        console.log(1);
        var replacedNode = items.replaceChild(items.children[j], items.children[i]);
        insertAfter(replacedNode, items.children[i]);
      }
    }
  }
}

function sortListDesc(sortType) {
  var items = document.querySelector('.product__wrap');

  for (var i = 0; i < items.children.length - 1; i++) {
    for (var j = i; j < items.children.length; j++) {
      if (+items.children[i].getAttribute(sortType) < +items.children[j].getAttribute(sortType)) {
        console.log(1);
        var replacedNode = items.replaceChild(items.children[j], items.children[i]);
        insertAfter(replacedNode, items.children[i]);
      }
    }
  }
}

function insertAfter(elem, refElem) {
  return refElem.parentNode.insertBefore(elem, refElem.nextSibling);
} //carousel


$(document).ready(function () {
  $(".owl-carousel").owlCarousel({
    items: 3,
    lazyLoad: true,
    autoplay: true,
    autoplayTimeout: 1500,
    autoplayHoverPause: true,
    center: true,
    loop: true,
    margin: 20,
    nav: true,
    navText: ['<i class="fas fa-chevron-circle-left"></i>', '<i class="fas fa-chevron-circle-right"></i>'],
    autoHeight: true,
    smartSpeed: 1150,
    responsive: {
      320: {
        items: 1
      },
      600: {
        items: 3
      }
    }
  });
}); //fetch

document.getElementById('list').addEventListener('click', fetchUserData);

function fetchUserData() {
  fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {
    return response.json();
  }).then(function (users) {
    var output = '<h2>List of Users</h2>';
    output += '<ul>';
    users.forEach(function (user) {
      output += "\n        <li>\n            ".concat(user.name, "\n        </li>\n        ");
    });
    output += '</ul>';
    document.getElementById("response").innerHTML = output;
  });
} //buttot top


$(document).ready(function () {
  var btn = $('#button');
  $(window).scroll(function () {
    if ($(window).scrollTop() > 300) {
      btn.addClass('show');
    } else {
      btn.removeClass('show');
    }
  });
  btn.on('click', function (e) {
    e.preventDefault();
    $('html, body').animate({
      scrollTop: 0
    }, '300');
  });
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
