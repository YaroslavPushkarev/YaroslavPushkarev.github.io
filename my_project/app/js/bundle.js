(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

//nav
var hamburger = document.querySelector('.hamburger');
var navLinks = document.querySelector('.nav-links');
var links = document.querySelectorAll('.nav-links li');
hamburger.addEventListener('click', function () {
  navLinks.classList.toggle('open');
  links.forEach(function (link) {
    link.classList.toggle('fade');
  });
}); //scrool

$(window).on("scroll", function () {
  if ($(window).scrollTop()) {
    $('nav').addClass('grey');
  } else {
    $('nav').removeClass('grey');
  }
}); //vegas-bg

$("body").vegas({
  delay: 4000,
  transition: 'zoomOut',
  slides: [{
    src: "./img/bg.jpg"
  }, {
    src: "./img/bg1.jpg"
  }, {
    src: "./img/bg2.jpg"
  }, {
    src: "./img/bg3.jpg"
  }],
  overlay: true,
  cover: true
}); //preloader

document.body.onload = function () {
  setTimeout(function () {
    var preloader = document.getElementById('page-preloader');

    if (!preloader.classList.contains('done')) {
      preloader.classList.add('done');
    }
  }, 100);
}; //product


document.querySelector('#sort-asc').onclick = function () {
  sortList('data-price');
};

document.querySelector('#sort-desc').onclick = function () {
  sortListDesc('data-price');
};

document.querySelector('#sort-rating').onclick = function () {
  sortListDesc('data-rating');
};

function sortList(sortType) {
  var items = document.querySelector('.product__wrap');

  for (var i = 0; i < items.children.length - 1; i++) {
    for (var j = i; j < items.children.length; j++) {
      if (+items.children[i].getAttribute(sortType) > +items.children[j].getAttribute(sortType)) {
        console.log(1);
        var replacedNode = items.replaceChild(items.children[j], items.children[i]);
        insertAfter(replacedNode, items.children[i]);
      }
    }
  }
}

function sortListDesc(sortType) {
  var items = document.querySelector('.product__wrap');

  for (var i = 0; i < items.children.length - 1; i++) {
    for (var j = i; j < items.children.length; j++) {
      if (+items.children[i].getAttribute(sortType) < +items.children[j].getAttribute(sortType)) {
        console.log(1);
        var replacedNode = items.replaceChild(items.children[j], items.children[i]);
        insertAfter(replacedNode, items.children[i]);
      }
    }
  }
}

function insertAfter(elem, refElem) {
  return refElem.parentNode.insertBefore(elem, refElem.nextSibling);
} //carousel


$(document).ready(function () {
  $(".owl-carousel").owlCarousel({
    items: 3,
    lazyLoad: true,
    autoplay: true,
    autoplayTimeout: 1500,
    autoplayHoverPause: true,
    center: true,
    loop: true,
    margin: 20,
    nav: true,
    navText: ['<i class="fas fa-chevron-circle-left"></i>', '<i class="fas fa-chevron-circle-right"></i>'],
    autoHeight: true,
    smartSpeed: 1150,
    responsive: {
      320: {
        items: 1
      },
      600: {
        items: 3
      }
    }
  });
}); //fetch

document.getElementById('list').addEventListener('click', fetchUserData);

function fetchUserData() {
  fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {
    return response.json();
  }).then(function (users) {
    var output = '<h2>List of Users</h2>';
    output += '<ul>';
    users.forEach(function (user) {
      output += "\n        <li>\n           ".concat(user.name, "\n        </li>\n        ");
    });
    output += '</ul>';
    document.getElementById("response").innerHTML = output;
  });
} //modal


var openModalButtons = document.querySelectorAll('[data-modal-target]');
var closeModalButtons = document.querySelectorAll('[data-close-button]');
var overlay = document.getElementById('overlayModal');
openModalButtons.forEach(function (button) {
  button.addEventListener('click', function () {
    var modal = document.querySelector(button.dataset.modalTarget);
    openModal(modal);
  });
});
overlay.addEventListener('click', function () {
  var modals = document.querySelectorAll('.modal.active');
  modals.forEach(function (modal) {
    closeModal(modal);
  });
});
closeModalButtons.forEach(function (button) {
  button.addEventListener('click', function () {
    var modal = button.closest('.modal');
    closeModal(modal);
  });
});

function openModal(modal) {
  if (modal == null) return;
  modal.classList.add('active');
  overlay.classList.add('active');
}

function closeModal(modal) {
  if (modal == null) return;
  modal.classList.remove('active');
  overlay.classList.remove('active');
} //buttot top


$(document).ready(function () {
  var btn = $('#button');
  $(window).scroll(function () {
    if ($(window).scrollTop() > 1400) {
      btn.addClass('show');
    } else {
      btn.removeClass('show');
    }
  });
  btn.on('click', function (e) {
    e.preventDefault();
    $('html, body').animate({
      scrollTop: 0
    }, '300');
  });
}); //add to cart

if (document.readyState == 'loading') {
  document.addEventListener('DOMContentLoaded', ready);
} else {
  ready();
}

function ready() {
  var removeCart = document.getElementsByClassName('btn-danger');

  for (var i = 0; i < removeCart.length; i++) {
    var button = removeCart[i];
    button.addEventListener('click', removeCartItem);
  }

  var quantityInputs = document.getElementsByClassName('cart-quantity-input');

  for (var _i = 0; _i < quantityInputs.length; _i++) {
    var input = quantityInputs[_i];
    input.addEventListener('change', quantityChanged);
  }

  var addToCartButtons = document.getElementsByClassName('shop-item-button');

  for (var _i2 = 0; _i2 < addToCartButtons.length; _i2++) {
    var _button = addToCartButtons[_i2];

    _button.addEventListener('click', addToCartClicked);
  }

  document.getElementsByClassName('btn-purchase')[0].addEventListener('click', purchaseClicked);
}

function purchaseClicked() {
  alert('Thank you for your purchase');
  var cartItems = document.getElementsByClassName('cart-items')[0];

  while (cartItems.hasChildNodes()) {
    cartItems.removeChild(cartItems.firstChild);
  }

  updateCartTotal();
}

function quantityChanged(event) {
  var input = event.target;

  if (isNaN(input.value) || input.value <= 0) {
    input.value = 1;
  }

  updateCartTotal();
}

function removeCartItem(event) {
  var buttonClicked = event.target;
  buttonClicked.parentElement.parentElement.remove();
  updateCartTotal();
}

function addToCartClicked(event) {
  var button = event.target;
  var shopItem = button.parentElement.parentElement;
  var price = shopItem.getElementsByClassName('cart-price')[0].innerText;
  var imgCard = shopItem.getElementsByClassName('shop-img')[0].src;
  addItemToCard(price, imgCard);
  updateCartTotal();
}

function addItemToCard(price, imgCard) {
  var cartRow = document.createElement('div');
  cartRow.classList.add('cart-row');
  var cartItems = document.getElementsByClassName('cart-items')[0];
  var cartItemNames = cartItems.getElementsByClassName('cart-price');

  for (var i = 0; i < cartItemNames.length; i++) {
    if (cartItemNames[i].innerText == price) {
      alert('This item is already added to the cart');
      return;
    }
  }

  var cartRowContents = "\n  <div class=\"cart-item cart-column\">\n    <img class=\"cart-item-image \" src=\"".concat(imgCard, "\">\n  </div>\n  <span class=\"cart-price cart-column\">").concat(price, "</span>\n  <form class=\"cart-quantity cart-column\">\n    <input class=\"cart-quantity-input\" type=\"number\" value=\"1\">\n    <button class=\"btn btn-danger\" type=\"button\">-</button>\n  </form>\n  ");
  cartRow.innerHTML = cartRowContents;
  cartItems.append(cartRow);
  cartRow.getElementsByClassName('btn-danger')[0].addEventListener('click', removeCartItem);
  cartRow.getElementsByClassName('cart-quantity-input')[0].addEventListener('change', quantityChanged);
}

function updateCartTotal() {
  var cartItemContainer = document.getElementsByClassName('cart-items')[0];
  var cartRows = cartItemContainer.getElementsByClassName('cart-row');
  var total = 0;

  for (var i = 0; i < cartRows.length; i++) {
    var cartRow = cartRows[i];
    var priceElement = cartRow.getElementsByClassName('cart-price')[0];
    var quantityElement = cartRow.getElementsByClassName('cart-quantity-input')[0];
    var price = parseFloat(priceElement.innerText.replace('$', ''));
    var quantity = quantityElement.value;
    total = total + price * quantity;
  }

  total = Math.round(total * 100) / 100;
  document.getElementsByClassName('cart-total-price')[0].innerText = "$ ".concat(total);
}

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
