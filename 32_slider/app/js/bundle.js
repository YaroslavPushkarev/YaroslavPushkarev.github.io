(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

$(document).ready(function () {
  $(".owl-carousel").owlCarousel({
    items: 3,
    lazyLoad: true,
    autoplay: true,
    autoplayTimeout: 1500,
    autoplayHoverPause: true,
    center: true,
    loop: true,
    margin: 20,
    nav: true,
    navText: ['<i class="fas fa-chevron-circle-left"></i>', '<i class="fas fa-chevron-circle-right"></i>'],
    autoHeight: true,
    stagePadding: 60,
    animateOut: true,
    animateIn: 'flipInX',
    smartSpeed: 1150,
    responsive: {
      320: {
        items: 1
      },
      600: {
        items: 3
      }
    }
  });
});

function initMap() {
  var beetroot = {
    lat: 49.066589,
    lng: 33.413636
  };
  map = new google.maps.Map(document.getElementById('map'), {
    center: beetroot,
    zoom: 18,
    styles: mapStyles
  });
  var marker = new google.maps.Marker({
    position: beetroot,
    map: map,
    icon: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/parking_lot_maps.png'
  });
}

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
