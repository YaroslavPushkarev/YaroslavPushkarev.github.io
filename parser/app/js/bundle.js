(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

window.addEventListener('DOMContentLoaded', function () {
  var body = document.querySelector('body');
  var textNodes = [];

  function recursy(element) {
    element.childNodes.forEach(function (node) {
      if (node.textContent.match(/^\s{1,32}963/) || node.textContent.match(/^19 574/) || node.textContent.match(/^\d\d\s\w\w\w\d\d/)) {
        var obj = {
          header: node.textContent.trim(),
          nName: node.nodeName,
          name: node.outerText,
          id: node.id
        };
        textNodes.push(obj);
      } else {
        recursy(node);
      }
    });
  }

  recursy(body);
  console.log(textNodes);
  fetch('https://jsonplaceholder.typicode.com/posts', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(textNodes)
  }).then(function (response) {
    return response.json();
  }).then(function (json) {
    return console.log(json);
  });
}); // match(/^\s{1,32}963\.17/)

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
