(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var num = prompt('Enter number');

switch (num) {
  case '1':
    alert('!');
    break;

  case '2':
    alert('@');
    break;

  case '3':
    alert('#');
    break;

  case '4':
    alert('$');
    break;

  case '5':
    alert('%');
    break;

  case '6':
    alert('^');
    break;

  case '7':
    alert('&');
    break;

  case '8':
    alert('*');
    break;

  case '9':
    alert('(');
    break;

  case '0':
    alert(')');
    break;
}

var age = prompt('Enter your age');

if (age <= 12) {
  alert('child');
} else if (age <= 18) {
  alert('teen');
} else if (age <= 60) {
  alert('adult');
} else {
  alert('pens');
}

var number = prompt('enter number');
var first = number[0];
var second = number[1];
var third = number[2];

if (first === number[1] || first === number[2]) {
  alert('equal');
} else if (second === number[0] || second === number[2]) {
  alert('equal');
} else if (third === number[0] || third === number[1]) {
  alert('equal');
} else {
  alert('not');
}

var year = prompt('Enter year');

if (year % 400 == 0 || year % 4 == 0 && year % 100 !== 0) {
  alert('Leap year');
} else {
  alert('Year is not a leap');
}

var palindrom = prompt('Enter a five digit number');
var reverse = palindrom.split('').reverse().join('');
;

if (palindrom === reverse) {
  alert('true');
} else {
  alert('non');
}

var usd = prompt('Enter your sum');
var eur = 0.903261;
var uan = 23.9392;
var azn = 1.7000;
var sum = prompt('choose currency:EUR,UAN or AZN');

switch (sum) {
  case 'EUR':
    alert(usd * eur);
    break;

  case 'UAN':
    alert(usd * uan);
    break;

  case 'AZN':
    alert(usd * azn);
    break;
}

var purchaseAmount = prompt('Enter your purchase amount');

if (purchaseAmount >= 100 && purchaseAmount <= 300) {
  alert('Your discounted amount ' + (purchaseAmount / 100 * 3 - purchaseAmount));
} else if (purchaseAmount >= 300 && purchaseAmount <= 500) {
  alert('Your discounted amount ' + (purchaseAmount / 100 * 5 - purchaseAmount));
} else if (purchaseAmount >= 500) {
  alert('Your discounted amount ' + (purchaseAmount / 100 * 7 - purchaseAmount));
} else {
  alert('astalavista baby');
}

var circles = prompt('Enter length circles');
var square = prompt('Enter square perimeter');
var circleDiametr = (circles / Math.PI).toFixed(2);

if (circleDiametr <= square / 4) {
  alert('Сircle fit in a square');
} else alert('Сircle does not fit in a square');

var questionFirst = prompt('What is the capital of France: Paris,Narnia or London?');
var questionSecond = prompt('How much will 10 + 10: 24, 21 or 20?');
var questionThird = prompt('What year did the Berlin Wall fall: 1989, 1990 or 1988?');
var score = 0;

if (questionFirst === 'Paris') {
  score += 2;
}

if (questionSecond === '20') {
  score += 2;
}

if (questionThird === '1989') {
  score += 2;
}

alert(score);

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
